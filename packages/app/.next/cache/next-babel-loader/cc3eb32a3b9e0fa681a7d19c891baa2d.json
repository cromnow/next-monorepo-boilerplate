{"ast":null,"code":"var _jsxFileName = \"/Users/christiancromnow/Repos/arbeit/packages/app/src/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button } from '@arbete/ui';\nimport AuthProvider, { AuthConsumer } from 'contexts/Auth';\nimport API from 'api/protected';\nexport default function Index() {\n  return __jsx(React.Fragment, null, __jsx(AuthProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Hello Next.js\"), __jsx(AuthConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, ({\n    login,\n    logout,\n    token\n  }) => __jsx(React.Fragment, null, token, __jsx(Button, {\n    onClick: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Login\"), __jsx(Button, {\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Logout\"), __jsx(Button, {\n    onClick: () => API.get('/ping', {\n      headers: {\n        \"Authorization\": token\n      }\n    }).then(resp => console.log('protected api returned; ', resp)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Call protected API\")))));\n}","map":{"version":3,"sources":["/Users/christiancromnow/Repos/arbeit/packages/app/src/pages/index.js"],"names":["Button","AuthProvider","AuthConsumer","API","Index","login","logout","token","get","headers","then","resp","console","log"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,YAAvB;AACA,OAAOC,YAAP,IAAuBC,YAAvB,QAA2C,eAA3C;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAIA,eAAe,SAASC,KAAT,GAAiB;AAC9B,SACE,4BACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,GAAD,KAA6B,4BAC3BA,KAD2B,EAE7B,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAF6B,EAG7B,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAH6B,EAI7B,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMH,GAAG,CAACK,GAAJ,CAAQ,OAAR,EAAiB;AAACC,MAAAA,OAAO,EAAE;AAAC,yBAAiBF;AAAlB;AAAV,KAAjB,EAAsDG,IAAtD,CAA2DC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,IAAxC,CAAnE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJ6B,CADjC,CAFF,CADF,CADF;AAiBD","sourcesContent":["import { Button } from '@arbete/ui';\nimport AuthProvider, { AuthConsumer } from 'contexts/Auth';\nimport API from 'api/protected';\n\n\n\nexport default function Index() {\n  return (\n    <>\n      <AuthProvider>\n        <p>Hello Next.js</p>\n        <AuthConsumer>\n          { ({login, logout, token }) => <>\n            { token }\n            <Button onClick={login}>Login</Button>\n            <Button onClick={logout}>Logout</Button>\n            <Button onClick={() => API.get('/ping', {headers: {\"Authorization\": token}}).then(resp => console.log('protected api returned; ', resp))}>\n              Call protected API\n            </Button>\n          </>}\n        </AuthConsumer>\n      </AuthProvider>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}