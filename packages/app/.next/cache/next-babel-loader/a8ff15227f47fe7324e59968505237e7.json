{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Component, createContext, useState } from 'react';\nimport axios from 'axios';\nexport const AuthContext = createContext({\n  user: null,\n  token: '',\n  login: () => {},\n  logout: () => {}\n});\nconst serverUrl = 'http://localhost:3001';\n\nclass AuthProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"login\", () => {\n      axios.get(serverUrl + '/auth/login').then(response => this.setState({\n        token: response.data.token\n      }));\n    });\n\n    _defineProperty(this, \"logout\", () => {\n      this.setState({\n        token: ''\n      });\n    });\n\n    this.state = {\n      user: null,\n      token: '',\n      login: this.login,\n      logout: this.logout\n    };\n    this.login = this.login.bind(this);\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    return __jsx(AuthContext.Provider, {\n      value: this.state\n    }, children);\n  }\n\n}\n\nexport const AuthConsumer = AuthContext.Consumer;\nexport default AuthProvider;","map":null,"metadata":{},"sourceType":"module"}