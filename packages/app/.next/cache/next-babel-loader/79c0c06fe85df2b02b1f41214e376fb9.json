{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christiancromnow/Repos/arbeit/packages/app/src/contexts/Auth/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { createContext, useState } from 'react';\nimport axios from 'axios';\nvar AuthContext = createContext({\n  user: null,\n  token: '',\n  login: function login() {},\n  logout: function logout() {}\n});\nvar serverUrl = 'http://localhost:3001';\n\nvar AuthProvider = /*#__PURE__*/function (_Component) {\n  _inherits(AuthProvider, _Component);\n\n  var _super = _createSuper(AuthProvider);\n\n  _createClass(AuthProvider, [{\n    key: \"login\",\n    value: function login() {\n      var response, token;\n      return _regeneratorRuntime.async(function login$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(serverUrl + '/api/login'));\n\n            case 2:\n              response = _context.sent;\n              token = response.data.token;\n              this.setState({\n                token: token\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var response, token;\n      return _regeneratorRuntime.async(function logout$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(axios.get(serverUrl + '/api/logout'));\n\n            case 2:\n              response = _context2.sent;\n              token = response.data.token;\n              this.setState({\n                token: null\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  function AuthProvider(props) {\n    var _this;\n\n    _classCallCheck(this, AuthProvider);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      user: null,\n      token: '',\n      login: function login() {},\n      logout: function logout() {}\n    };\n    return _this;\n  }\n\n  _createClass(AuthProvider, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return __jsx(AuthContext.Provider, {\n        value: this.state,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 12\n        }\n      }, children);\n    }\n  }]);\n\n  return AuthProvider;\n}(Component);\n\nexport var AuthConsumer = AuthContext.Consumer;\nexport default AuthProvider;","map":{"version":3,"sources":["/Users/christiancromnow/Repos/arbeit/packages/app/src/contexts/Auth/index.js"],"names":["createContext","useState","axios","AuthContext","user","token","login","logout","serverUrl","AuthProvider","get","response","data","setState","props","state","children","Component","AuthConsumer","Consumer"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,IAAMC,WAAW,GAAGH,aAAa,CAAC;AAChCI,EAAAA,IAAI,EAAE,IAD0B;AAEhCC,EAAAA,KAAK,EAAE,EAFyB;AAGhCC,EAAAA,KAAK,EAAE,iBAAM,CAAE,CAHiB;AAIhCC,EAAAA,MAAM,EAAE,kBAAM,CAAE;AAJgB,CAAD,CAAjC;AAOA,IAAMC,SAAS,GAAG,uBAAlB;;IAEMC,Y;;;;;;;;;;;;;;+CAEqBP,KAAK,CAACQ,GAAN,CAAUF,SAAS,GAAG,YAAtB,C;;;AAAjBG,cAAAA,Q;AACAN,cAAAA,K,GAAQM,QAAQ,CAACC,IAAT,CAAcP,K;AAC5B,mBAAKQ,QAAL,CAAc;AAAER,gBAAAA,KAAK,EAAEA;AAAT,eAAd;;;;;;;;;;;;;;;;;;+CAIuBH,KAAK,CAACQ,GAAN,CAAUF,SAAS,GAAG,aAAtB,C;;;AAAjBG,cAAAA,Q;AACAN,cAAAA,K,GAAQM,QAAQ,CAACC,IAAT,CAAcP,K;AAC5B,mBAAKQ,QAAL,CAAc;AAAER,gBAAAA,KAAK,EAAE;AAAT,eAAd;;;;;;;;;;;AAGF,wBAAYS,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXX,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,KAAK,EAAE,iBAAM,CAEZ,CALU;AAMXC,MAAAA,MAAM,EAAE,kBAAM,CAEb;AARU,KAAb;AAFiB;AAYlB;;;;6BAEQ;AAAA,UACCS,QADD,GACc,KAAKF,KADnB,CACCE,QADD;AAEP,aAAO,MAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE,KAAKD,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACHC,QADG,CAAP;AAGD;;;;EAhCwBC,S;;AAmC3B,OAAO,IAAMC,YAAY,GAAGf,WAAW,CAACgB,QAAjC;AACP,eAAeV,YAAf","sourcesContent":["import { createContext, useState } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext({ \n  user: null, \n  token: '',\n  login: () => {},\n  logout: () => {}\n});\n\nconst serverUrl = 'http://localhost:3001';\n\nclass AuthProvider extends Component {\n  async login() {\n    const response = await axios.get(serverUrl + '/api/login');\n    const token = response.data.token;\n    this.setState({ token: token });\n  }\n  \n  async logout() {\n    const response = await axios.get(serverUrl + '/api/logout');\n    const token = response.data.token;\n    this.setState({ token: null });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      token: '',\n      login: () => {\n  \n      },\n      logout: () => {\n  \n      }\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n    return <AuthContext.Provider value={this.state}>\n      { children }  \n    </AuthContext.Provider>\n  }\n}\n\nexport const AuthConsumer = AuthContext.Consumer;\nexport default AuthProvider;"]},"metadata":{},"sourceType":"module"}